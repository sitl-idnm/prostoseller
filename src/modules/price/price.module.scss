@use "@styles/func";
@use "@styles/mixins" as *;
@use "@styles/variables";

.root {
}

.header {
	display: flex;
	align-items: center;
	justify-content: space-between;
	gap: func.rem(12);
	margin-bottom: func.rem(20);

	@include tablet-small {
		flex-direction: column;
		align-items: flex-start;
	}

	h2 {
		font-size: 40px;
		font-weight: 700;
		line-height: 1.2;

		@include tablet {
			font-size: 24px;

			max-width: 100%;
		}

		@include mobile-large {
			font-size: 20px;

			max-width: 100%;
		}
	}
}

.switch {
	display: flex;
	gap: 12px;

	@include mobile-large {
		flex-direction: column;
		align-items: stretch;
		width: 100%;
	}
}

.grid {

	/* mobile carousel */
	@media (max-width: 767px) {
		display: block;
		position: relative;
		padding: 0; /* full width cards */
		overflow: hidden;
	}
}

.card {
	border-radius: func.rem(16);
	background: var(--color-white-default);
	padding: func.rem(20);

	display: flex;
	flex-direction: column;
	justify-content: space-between;

	@media (max-width: 767px) {
		width: 100%;
		flex: 0 0 100%;
		/* stacked via JS translateX on track */
	}
}

.carouselTrack {
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	gap: func.rem(16);

	@media (max-width: 767px) {
		display: flex;
		gap: func.rem(16);
		transition: transform 0.3s ease;
		/* Ensure slides have no extra margins affecting offset */
		> * { margin: 0; }
	}

	/* Reverse visual order on mobile-large */
	@include mobile-large {
		> :nth-child(1) { order: 3; }
		> :nth-child(2) { order: 2; }
		> :nth-child(3) { order: 1; }
	}
}

.mobileNav {
	display: none;
	@media (max-width: 767px) {
		display: flex;
		gap: func.rem(8);
		justify-content: flex-end;
		margin-bottom: func.rem(12);
	}
}

.navBtn {
	@media (max-width: 767px) {
		display: inline-flex;
		align-items: center;
		justify-content: center;
		width: 40px;
		height: 40px;
		border-radius: 999px;
		border: 1px solid #d6c4ff;
		background: #fff;
		color: var(--color-purple);
		cursor: pointer;
		transition: background variables.$transition, transform variables.$transition;
		&:hover { background: #f7f2ff; transform: translateY(-1px); }
		&:active { transform: translateY(0); }
		svg { width: 20px; height: 20px; display: block; }
	}
}

.planTitle {
	font-weight: 700;
	font-size: 24px;
	line-height: 1.5;

	margin-bottom: 6px;

	@include tablet {
		font-size: 20px;
	}
}

.planSub {
	color: #454444;
	font-size: 18px;
	line-height: 1.5;

	margin-bottom: 12px;

	@include tablet {
		font-size: 14px;
	}
}

.planSubPurple {
	color: #A452D7;
	font-weight: 700;

	font-size: 18px;
	line-height: 1.5;

	@include tablet {
		font-size: 14px;
	}
}

.features {
	display: grid;
	gap: 8px;
	margin: 12px 0;
	line-height: 1.5;
}

.feature {
	display: flex;
	align-items: center;
	gap: 8px;
	transition: transform variables.$transition;

	@include tablet {
		font-size: 12px;
	}

	&:hover {
		transform: scale(1.05);
		color: var(--color-primary);
	}

	svg {
		width: func.rem(20);
		height: func.rem(20);
		flex: 0 0 auto;
	}
}

.featureIcon {
	width: 20px;
	height: 20px;
	flex: 0 0 auto;
}

.feature_hidden {
	display: none;
}
.feature_addon {
	color: var(--color-purple);
}

.priceRow {
	display: flex;
	flex-direction: column;
	align-items: center;
	gap: 16px;
	margin-top: 12px;

	a {
		width: 100%;
		background: linear-gradient(75deg, #FA457E 0%, #7B49FF 100%);
	}
}

.priceLine {
	display: flex;
	align-items: center;
	gap: func.rem(12);
}

.oldPrice {
	color: rgba(24, 24, 24, 0.8);
	font-weight: 600;
	text-decoration: line-through;
	font-size: 14px;
}

.priceValue {
	font-weight: 700;
	font-size: 40px;
	line-height: 1.5;
	display: inline-block;

	background: linear-gradient(75deg, #FA457E 0%, #7B49FF 100%);
	-webkit-background-clip: text;
	background-clip: text;
	color: transparent;
}

.priceValue_bump {
	animation: price-bump 0.5s ease;
}

.priceValue_flash {
	animation: price-flash 0.7s ease;
}

@keyframes price-bump {
	0% {
		transform: translateY(6px);
		opacity: 0;
	}
	60% {
		transform: translateY(0);
		opacity: 1;
	}
	100% {
		transform: none;
	}
}

@keyframes price-flash {
	0% {
		color: var(--color-purple);
		transform: scale(1.06);
	}
	60% {
		transform: scale(1);
	}
	100% {
		color: inherit;
	}
}
