@use "@styles/func";
@use "@styles/mixins" as *;
@use "@styles/variables";

.root {
	position: relative;
	border-radius: 16px;
	background: var(--color-white-default);
	border: 1px solid rgba(0, 0, 0, 0.08);
	padding: 24px;
	overflow: hidden;

	will-change: transform;
	transition: transform variables.$transition;
	min-width: 170px;
	width: 100%;
	height: 100%;
	display: flex;
	text-wrap: auto;

	@include tablet {
		padding: 16px;
	}

	@include mobile-large {
		padding: 12px;

		height: 240px;
	}
}

.inner {
	position: relative;
	z-index: 1;
	display: flex;
	gap: 12px;

	width: 100%;
	height: 100%;

	.content {
		display: flex;
		flex-direction: column;
		position: relative;
		z-index: 1;
		width: 100%;
		height: 100%;
	}

	.image {
		width: 100%;
		height: 100%;

		margin-right: -24px;

		@include mobile-large {
			display: none;
		}

		img {
			width: 100%;
			height: 100%;
		}

		@include tablet {
			margin-right: -16px;
		}

		@include mobile-large {
			margin-right: -12px;
		}
	}
}

.root:hover {
	transform: translateY(calc(-1 * func.rem(5)));

	@include mobile-large {
		transform: translateY(0);
	}
}

.icon {
	font-size: 0;
	margin-bottom: func.rem(12);

	width: 90px;
	height: 55px;

	@include mobile-large {
		width: 21px;
		height: 21px;
	}

	svg {
		width: auto;
		height: 100%;
	}
}

.title {
	max-width: 443px;

	font-weight: 600;
	font-size: 20px;
	line-height: 1.5;
	margin-bottom: 24px;

	@include tablet {
		font-size: 18px;
		line-height: 1.2;
		margin-bottom: 12px;
	}

	@include tablet-small {
		font-size: 20px;
		line-height: 1.5;
		margin-bottom: 8px;
	}

	@include mobile-large {
		font-size: 14px;
		line-height: 1.5;
		margin-bottom: 8px;
	}
}

.text {
	color: rgba(0, 0, 0, 0.8);
	font-size: 16px;
	line-height: 1.5;
	font-weight: 400;

	@include tablet {
		font-size: 14px;
	}

	@include tablet-small {
		font-size: 16px;
	}

	@include mobile-large {
		font-size: 12px;
	}
}

.controls {
	margin-top: auto;
	padding-top: func.rem(8);

	@include mobile-large {
		display: none;
	}
}

/* Animated corner */
.corner {
	position: absolute;
	top: 0;
	right: 0;
	width: 49px;
	height: 49px;
	background: linear-gradient(135deg, var(--color-purple-light), var(--color-purple-dark));
	clip-path: polygon(100% 0, 0 0, 100% 100%);
	transition: transform variables.$transition;
	transform-origin: top right;
	transform: scale(1);
	z-index: 2;
}

.root_animated {
	&:hover .corner {
		transform: scale(1.6);
	}

	/* text color morph where corner overlaps - via mix-blend-mode + overlay */
	&:hover .overlay {
		opacity: 1;
	}
}

.overlay {
	position: absolute;
	inset: 0;
	mix-blend-mode: color;
	opacity: 0;
	transition: opacity variables.$transition;
	pointer-events: none;
}

.content {
	position: relative;
	z-index: 1;
}
